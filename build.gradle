buildscript {
    ext {
        queryDslVersion = "5.0.0"
    }
}

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.2'
    id 'io.spring.dependency-management' version '1.1.4'
    id "org.asciidoctor.jvm.convert" version "3.3.2"
    id 'jacoco'
}

group = 'com.yello'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

ext {
    snippetsDir = file('build/generated-snippets')
}

test {
    useJUnitPlatform()
    finalizedBy 'jacocoTestReport'
    outputs.dir snippetsDir
}

configurations {
    asciidoctorExt
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

dependencies {
    // Properties Migrator
    runtimeOnly "org.springframework.boot:spring-boot-properties-migrator"

    implementation 'org.springframework.boot:spring-boot-starter-web'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Repositories
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.amqp:spring-rabbit:3.1.1'

    runtimeOnly 'com.h2database:h2'
    runtimeOnly 'com.mysql:mysql-connector-j:8.0.31'

    // Validations
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // JWT
    implementation group: 'io.jsonwebtoken', name: 'jjwt-api', version: '0.11.2'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-impl', version: '0.11.2'
    implementation group: 'io.jsonwebtoken', name: 'jjwt-jackson', version: '0.11.2'


    // Http
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'io.netty:netty-resolver-dns-native-macos:4.1.79.Final:osx-aarch_64'

    // FCM
    implementation 'com.google.firebase:firebase-admin:9.2.0'

    // slack-webhook
    implementation "net.gpedro.integrations.slack:slack-webhook:1.4.0"

    // google play android developer api
    implementation 'com.google.apis:google-api-services-androidpublisher:v3-rev20211125-1.32.1'
    implementation "com.google.api-client:google-api-client:1.33.0"

    // gson
    implementation 'com.google.code.gson:gson:2.10.1'

    // Testing
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.4.2'
    asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'
    testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
    testImplementation 'org.springframework.security:spring-security-test'
    testImplementation 'org.mockito:mockito-inline:5.2.0'
    testImplementation 'org.springframework.batch:spring-batch-test'

    // jwt decode
    implementation 'org.bouncycastle:bcprov-jdk15on:1.69'
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-impl:0.11.2'
    implementation 'io.jsonwebtoken:jjwt-jackson:0.11.2'

    // AOP
    implementation 'org.springframework.boot:spring-boot-starter-aop'

    // querydsl
    implementation "com.querydsl:querydsl-core:${queryDslVersion}"
    annotationProcessor "com.querydsl:querydsl-apt:${queryDslVersion}:jakarta"
    implementation "com.querydsl:querydsl-jpa:${queryDslVersion}:jakarta"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"
    implementation "jakarta.annotation:jakarta.annotation-api"
    implementation "com.querydsl:querydsl-codegen:${queryDslVersion}"

    // tink
    implementation 'com.google.crypto.tink:tink-android:1.4.0-rc1'
    implementation 'com.google.crypto.tink:apps-rewardedads:1.10.0'

    // spring batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'

}

asciidoctor {
    inputs.dir snippetsDir
    configurations 'asciidoctorExt'
    dependsOn test
}

asciidoctor.doFirst {
    delete file('src/docs/asciidocs')
}

bootJar {
    dependsOn asciidoctor
    copy {
        from asciidoctor.outputDir
        into "src/main/resources/static/docs"
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
    querydsl.extendsFrom compileClasspath
}

jar.enabled = false

jacoco.toolVersion = "0.8.7"
jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled true
        html.enabled true

        csv.destination file("${buildDir}/jacoco/index.csv")
        html.destination file("${buildDir}/jacoco/index.html")
    }
//    finalizedBy 'jacocoTestCoverageVerification'
}

//jacocoTestCoverageVerification {
//    violationRules {
//        rule {
//            enabled = true
//            element = 'CLASS'
//
//            limit {
//                counter = 'METHOD'
//                value = 'COVEREDRATIO'
//                minimum = 0.60
//            }
//
//            limit {
//                counter = 'INSTRUCTION'
//                value = 'COVEREDRATIO'
//                minimum = 0.60
//            }
//
//            excludes = ["*.dto", "*.dto.*", "*.ServerApplication", "*.configuration.*", "*.security.*", "*.exception.*", "*.util.*"]
//        }
//    }
//}
